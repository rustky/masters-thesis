embed_res <- dimRed::embed(zip.no.label.subset,method)
low.dim.list[[paste(method)]] <- embed_res@data@data
}
destfile <- "zip.train.gz"
datasets.url <-
"https://web.stanford.edu/~hastie/ElemStatLearn/datasets/"
if(!file.exists(destfile)){
zip.url <- paste0(datasets.url, destfile)
download.file(zip.url, destfile)
}
if(!requireNamespace("R.utils")){
install.packages("R.utils")
}
library(data.table)
zip.dt <- data.table::fread(file=destfile)
zip.no.label <- as.matrix(zip.dt[, -1])
zip.label.vec <- zip.dt[[1]]
table(zip.label.vec)
label.dt <- data.table(
label=zip.label.vec,
row=seq_along(zip.label.vec))
label.dt[, example.i := seq_along(row), by=label]
subset.indices <- label.dt[example.i <= 10, row]
zip.no.label.subset <- zip.no.label[subset.indices,]
zip.label.subset <- zip.label.vec[subset.indices]
# Question 1.2
low.dim.list <- list()
for(method in c("MDS","PCA","HLLE")){
embed_res <- dimRed::embed(zip.no.label.subset,method)
low.dim.list[[paste(method)]] <- embed_res@data@data
}
install.packages('RSpectra')
for(method in c("MDS","PCA","HLLE")){
embed_res <- dimRed::embed(zip.no.label.subset,method)
low.dim.list[[paste(method)]] <- embed_res@data@data
}
install.packages('RANN')
for(method in c("MDS","PCA","HLLE")){
embed_res <- dimRed::embed(zip.no.label.subset,method)
low.dim.list[[paste(method)]] <- embed_res@data@data
}
View(low.dim.list)
# Question 1.2
library(data.table)
low.dim.list <- list()
for(method in c("MDS","PCA","HLLE")){
embed_res <- dimRed::embed(zip.no.label.subset,method)
low.dim.list[[paste(method)]] <- data.table(
embed_res@data@data,
method)
}
embedded.dt <- do.call(rbind, low.dim.list)
# Question 1.2
library(data.table)
low.dim.list <- list()
for(method in c("MDS","PCA","HLLE")){
embed_res <- dimRed::embed(zip.no.label.subset,method)
low.dim.list[[paste(method)]] <- data.table(
low.dim = embed_res@data@data,
method)
}
embedded.dt <- do.call(rbind, low.dim.list)
View(low.dim.list)
# Question 1.2
library(data.table)
low.dim.list <- list()
for(method in c("MDS","PCA","HLLE")){
embed_res <- dimRed::embed(zip.no.label.subset,method)
low.dim.list[[paste(method)]] <- data.table(
low.dim <- embed_res@data@data,
method)
}
embedded.dt <- do.call(rbind, low.dim.list)
View(low.dim.list)
embed_res@data@data[1]
embed_res@data@data[,1]
# Question 1.2
library(data.table)
low.dim.list <- list()
for(method in c("MDS","PCA","HLLE")){
embed_res <- dimRed::embed(zip.no.label.subset,method)
low.dim.list[[paste(method)]] <- data.table(
low.dim <- embed_res@data@data[,1],
method)
}
embedded.dt <- do.call(rbind, low.dim.list)
# Question 1.2
library(data.table)
low.dim.list <- list()
for(method in c("MDS","PCA","HLLE")){
embed_res <- dimRed::embed(zip.no.label.subset,method)
low.dim.list[[paste(method)]] <- data.table(
low.dim <- matrix(embed_res@data@data),
method)
}
embedded.dt <- do.call(rbind, low.dim.list)
View(embedded.dt)
# Question 1.2
library(data.table)
low.dim.list <- list()
for(method in c("MDS","PCA","HLLE")){
embed_res <- dimRed::embed(zip.no.label.subset,method)
low.dim.list[[paste(method)]] <- data.table(
low.dim <- matrix(embed_res@data@data,ncol = 2),
method)
}
embedded.dt <- do.call(rbind, low.dim.list)
View(embedded.dt)
View(embedded.dt)
embedded.dt[,V1, method == MDS]
embedded.dt[V1, method == MDS]
embedded.dt[method == MDS]
embedded.dt[V1, method == "MDS"]
embedded.dt[method == "MDS"]
embedded.dt[V1,method == "MDS"]
which(data.dt$method == "MDS
")
# Question 1.2
library(data.table)
low.dim.list <- list()
for(method in c("MDS","PCA","HLLE")){
embed_res <- dimRed::embed(zip.no.label.subset,method)
low.dim.list[[paste(method)]] <- data.table(
low.dim <- matrix(embed_res@data@data,ncol = 2,byrow = TRUE),
method)
}
embedded.dt <- do.call(rbind, low.dim.list)
ggplot()+
geom_text(aes(V1,V2,color = method))
library(ggplot2)
ggplot()+
geom_text(aes(V1,V2,color = method))
ggplot(emedded.dt)+
geom_text(aes(V1,V2,color = method))
ggplot(embedded.dt)+
geom_text(aes(V1,V2,color = method))
ggplot(embedded.dt)+
geom_text(aes(V1,V2,color = method,labels = zip.label.subset))
ggplot(embedded.dt)+
geom_text(aes(V1,V2,color = method,label = zip.label.subset))
# Question 1.2
library(data.table)
low.dim.list <- list()
for(method in c("MDS","PCA","HLLE")){
embed_res <- dimRed::embed(zip.no.label.subset,method)
low.dim.list[[paste(method)]] <- data.table(
low.dim <- matrix(embed_res@data@data,ncol = 2),
method,
labels = zip.label.subset)
}
embedded.dt <- do.call(rbind, low.dim.list)
library(ggplot2)
ggplot(embedded.dt)+
geom_text(aes(V1,V2,color = method,label = zip.label.subset))
library(ggplot2)
ggplot(embedded.dt)+
geom_text(aes(V1,V2,color = method,label = labels))
dimRed::dimRedQualityList()
ggplot(embedded.dt)+
geom_text(aes(V1,V2,label = labels))+
facet_grid(. ~ method)
ggplot(embedded.dt)+
geom_text(aes(V1,V2,label = labels))+
facet_grid(method ~ .)
# Question 1.3
quality.list <- list()
for(measure in c("Q_local", "Q_global", "total_correlation")){
qual.res <- dimRed::quality(embedded.dt, measure)
}
quality.list <- list()
for(method in methods){
for(measure in c("Q_local", "Q_global", "total_correlation")){
embed_res <- dimRed::embed(zip.no.label.subset,method)
low.dim.res <- embed_res@data
quality.list[[paste(measure)]] <-
dimRed::quality(low.dim.res, measure)
}
}
methods <- c("MDS","PCA","HLLE")
for(method in methods){
for(measure in c("Q_local", "Q_global", "total_correlation")){
embed_res <- dimRed::embed(zip.no.label.subset,method)
low.dim.res <- embed_res@data
quality.list[[paste(measure)]] <-
dimRed::quality(low.dim.res, measure)
}
}
# Kyle Rust Homework 14
# Question 1.1
destfile <- "zip.train.gz"
datasets.url <-
"https://web.stanford.edu/~hastie/ElemStatLearn/datasets/"
if(!file.exists(destfile)){
zip.url <- paste0(datasets.url, destfile)
download.file(zip.url, destfile)
}
if(!requireNamespace("R.utils")){
install.packages("R.utils")
}
library(data.table)
zip.dt <- data.table::fread(file=destfile)
zip.no.label <- as.matrix(zip.dt[, -1])
zip.label.vec <- zip.dt[[1]]
table(zip.label.vec)
label.dt <- data.table(
label=zip.label.vec,
row=seq_along(zip.label.vec))
label.dt[, example.i := seq_along(row), by=label]
subset.indices <- label.dt[example.i <= 10, row]
zip.no.label.subset <- zip.no.label[subset.indices,]
zip.label.subset <- zip.label.vec[subset.indices]
quality.list <- list()
for(method in methods){
for(measure in c("Q_local", "Q_global", "total_correlation")){
embed_res <- dimRed::embed(zip.no.label.subset,method)
low.dim.res <- embed_res@data
quality.list[[paste(measure)]] <-
dimRed::quality(low.dim.res, measure)
}
}
View(low.dim.res)
View(embed_res)
quality.list <- list()
quality.list <- list()
for(method in methods){
for(measure in c("Q_local", "Q_global", "total_correlation")){
embed_res <- dimRed::embed(zip.no.label.subset,method)
quality.list[[paste(measure)]] <-
dimRed::quality(embed_res, measure)
}
}
install.packages('coRanking')
quality.list <- list()
for(method in methods){
for(measure in c("Q_local", "Q_global", "total_correlation")){
embed_res <- dimRed::embed(zip.no.label.subset,method)
quality.list[[paste(measure)]] <-
dimRed::quality(embed_res, measure)
}
}
install.packages('optimx')
quality.list <- list()
for(method in methods){
for(measure in c("Q_local", "Q_global", "total_correlation")){
embed_res <- dimRed::embed(zip.no.label.subset,method)
quality.list[[paste(measure)]] <-
dimRed::quality(embed_res, measure)
}
}
for(method in methods){
for(measure in c("Q_local", "Q_global", "total_correlation")){
print(method)
embed_res <- dimRed::embed(zip.no.label.subset,method)
quality.list[[paste(measure)]] <-
dimRed::quality(embed_res, measure)
}
}
quality.list <- list()
for(method in methods){
for(measure in c("Q_local", "Q_global", "total_correlation")){
print(measure)
embed_res <- dimRed::embed(zip.no.label.subset,method)
quality.list[[paste(measure)]] <-
dimRed::quality(embed_res, measure)
}
}
dimRed::dimRedQualityList()
quality.list <- list()
for(method in methods){
for(measure in c("Q_local", "Q_global", "AUC_lnK_R_NX")){
print(measure)
embed_res <- dimRed::embed(zip.no.label.subset,method)
quality.list[[paste(measure)]] <-
dimRed::quality(embed_res, measure)
}
}
View(quality.list)
quality.list <- list()
for(method in methods){
for(measure in c("Q_local", "Q_global", "AUC_lnK_R_NX")){
print(measure)
embed_res <- dimRed::embed(zip.no.label.subset,method)
quality.list[[paste(method,measure)]] <-
dimRed::quality(embed_res, measure)
}
}
View(quality.list)
quality.list <- list()
for(method in methods){
for(measure in c("Q_local", "Q_global", "AUC_lnK_R_NX")){
print(measure)
embed_res <- dimRed::embed(zip.no.label.subset,method)
quality.list[[paste(measure)]] <- data.table(
dimRed::quality(embed_res, measure),
method,
measure)
}
}
View(quality.list)
do.call(rbind, quality.list)
quality.list <- list()
for(method in methods){
for(measure in c("Q_local", "Q_global", "AUC_lnK_R_NX")){
print(measure)
embed_res <- dimRed::embed(zip.no.label.subset,method)
quality.list[[paste(measure)]] <- data.table(
error = dimRed::quality(embed_res, measure),
method,
measure)
}
}
do.call(rbind, quality.list)
quality.list[[paste(method, measure)]] <- data.table(
error = dimRed::quality(embed_res, measure),
method,
measure)
quality.list <- list()
for(method in methods){
for(measure in c("Q_local", "Q_global", "AUC_lnK_R_NX")){
print(measure)
embed_res <- dimRed::embed(zip.no.label.subset,method)
quality.list[[paste(method, measure)]] <- data.table(
error = dimRed::quality(embed_res, measure),
method,
measure)
}
}
quality.list <- list()
for(method in methods){
for(measure in c("Q_local", "Q_global", "AUC_lnK_R_NX")){
print(measure)
embed_res <- dimRed::embed(zip.no.label.subset,method)
quality.list[[paste(method, measure)]] <- data.table(
error = dimRed::quality(embed_res, measure),
method,
measure)
}
}
do.call(rbind, quality.list)
?matrix
quality.list <- list()
for(method in methods){
for(measure in c("Q_local", "Q_global", "AUC_lnK_R_NX")){
print(measure)
embed_res <- dimRed::embed(zip.no.label.subset,method)
quality.list[[paste(method, measure)]] <- matrix(
error = dimRed::quality(embed_res, measure),
dimnames = list(method,error))
}
}
quality.list <- list()
for(method in methods){
for(measure in c("Q_local", "Q_global", "AUC_lnK_R_NX")){
print(measure)
embed_res <- dimRed::embed(zip.no.label.subset,method)
quality.list[[paste(method, measure)]] <- matrix(
dimRed::quality(embed_res, measure),
dimnames = list(method,error))
}
}
quality.list <- list()
for(method in methods){
for(measure in c("Q_local", "Q_global", "AUC_lnK_R_NX")){
print(measure)
embed_res <- dimRed::embed(zip.no.label.subset,method)
quality.list[[paste(method, measure)]] <- matrix(
c(dimRed::quality(embed_res, measure),method,measure),
dimnames = list(c(method),c(error,measure)))
}
}
quality.list <- list()
for(method in methods){
for(measure in c("Q_local", "Q_global", "AUC_lnK_R_NX")){
print(measure)
embed_res <- dimRed::embed(zip.no.label.subset,method)
quality.list[[paste(method, measure)]] <- matrix(
c(dimRed::quality(embed_res, measure),method,measure),
dimnames = list(c(method),c("error",measure)))
}
}
quality.list <- list()
for(method in methods){
for(measure in c("Q_local", "Q_global", "AUC_lnK_R_NX")){
print(measure)
embed_res <- dimRed::embed(zip.no.label.subset,method)
quality.list[[paste(method, measure)]] <- matrix(
c(dimRed::quality(embed_res, measure),measure),
dimnames = list(c(method),c("error",measure)))
}
}
quality.list <- list()
for(method in methods){
for(measure in c("Q_local", "Q_global", "AUC_lnK_R_NX")){
print(measure)
embed_res <- dimRed::embed(zip.no.label.subset,method)
quality.list[[paste(method, measure)]] <- matrix(
c(dimRed::quality(embed_res, measure),measure,method))
}
}
View(quality.list)
do.call(rbind, quality.list)
?matrix
measures <- c("Q_local", "Q_global", "AUC_lnK_R_NX")
matrix(,nrow = 3, ncol=3, list(measures, methods))
matrix(,nrow = 3, ncol=3, dimnames =list(measures, methods))
# Question 1.3
# Rerun analysis with embed_res@data
error.mat <- matrix(,nrow = 3, ncol=3, dimnames =list(measures, methods))
# Question 1.3
# Rerun analysis with embed_res@data
error.mat <- matrix(0,nrow = 3, ncol=3, dimnames =list(measures, methods))
error.mat(measure,method)
error.mat[measure,method]
# Question 1.3
# Rerun analysis with embed_res@data
error.mat <- matrix(0,nrow = 3, ncol=3, dimnames =list(measures, methods))
quality.list <- list()
for(method in methods){
for(measure in measures){
print(measure)
embed_res <- dimRed::embed(zip.no.label.subset,method)
error.mat[measure,method] <- matrix(
c(dimRed::quality(embed_res, measure),measure,method))
}
}
# Question 1.3
# Rerun analysis with embed_res@data
error.mat <- matrix(0,nrow = 3, ncol=3,
dimnames =list(measures, methods))
quality.list <- list()
for(method in methods){
for(measure in measures){
print(measure)
embed_res <- dimRed::embed(zip.no.label.subset,method)
error.mat[measure,method] <-
dimRed::quality(embed_res, measure)
}
}
error.mat
library(data.table)
methods <- c("MDS","PCA","HLLE")
low.dim.list <- list()
for(method in methods){
embed_res <- dimRed::embed(zip.no.label.subset,method)
low.dim.list[[paste(method)]] <- data.table(
low.dim <- matrix(embed_res@data@data,ncol = 2),
method,
labels = zip.label.subset)
}
embedded.dt <- do.call(rbind, low.dim.list)
library(ggplot2)
ggplot(embedded.dt)+
geom_text(aes(V1,V2,label = labels))+
facet_grid(method ~ .)
library(data.table)
methods <- c("MDS","PCA","HLLE")
low.dim.list <- list()
for(method in methods){
embed_res <- dimRed::embed(zip.no.label.subset,method)
low.dim.list[[paste(method)]] <- data.table(
low.dim <- matrix(embed_res@data@data,ncol = 2),
method,
labels = zip.label.subset)
}
embedded.dt <- do.call(rbind, low.dim.list)
library(ggplot2)
ggplot(embedded.dt)+
geom_text(aes(V1,V2,label = labels))+
xlab("Component 2")+
ylab("Component 1")+
facet_grid(method ~ .)
measures <- c("Q_local", "Q_global", "AUC_lnK_R_NX")
error.mat <- matrix(0,nrow = 3, ncol=3,
dimnames =list(measures, methods))
quality.list <- list()
for(method in methods){
for(measure in measures){
print(measure)
embed_res <- dimRed::embed(zip.no.label.subset,method)
error.mat[measure,method] <-
dimRed::quality(embed_res, measure)
}
}
error.mat
?dimRed::quality
measures <- c("Q_local", "Q_global", "AUC_lnK_R_NX")
error.mat <- matrix(0,nrow = 3, ncol=3,
dimnames =list(measures, methods))
quality.list <- list()
for(method in methods){
for(measure in measures){
print(method)
embed_res <- dimRed::embed(zip.no.label.subset,method)
error.mat[measure,method] <-
dimRed::quality(embed_res, measure)
}
}
error.mat
devtools::document()
library(data.table)
library(ggplot2)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
timing.dt <- fread("timing_data.csv")
ggplot(timing.dt)+
geom_line(aes(data_size, median_time,color=loss_name))+
geom_ribbon(aes(x=data_size, y=median_time, ymin=lower_quantile, ymax=upper_quantile,
fill=loss_name), alpha = 0.5)+
scale_x_log10()+
scale_y_log10()+
ylab('Time to compute the loss (s)')+
xlab('Number of Observations to Compute')+
ggtitle("Time To Compute The Loss With Enforced Time Limit")
